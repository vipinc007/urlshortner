{"version":3,"sources":["logo.svg","components/header.jsx","components/footer.jsx","settings/sitesettings.js","components/shortenurl.jsx","App.js","pages/urls.jsx","pages/analysys.jsx","pages/urlprocessor.jsx","pages/notfound.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Fragment","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Component","Footer","state","apiurl","Shortenurl","url","shorturl","processing","status","baseurl","ukey","generateShortUrl","randstring","generateRandomString","surl","setState","handleShortenurl","addUrl","data","a","config","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","this","window","location","origin","toString","placeholder","aria-describedby","name","onChange","e","handleChange","onClick","disabled","length","readOnly","value","len","arr","ans","i","Math","floor","random","target","App","Urls","urls","loading","loadUrls","map","key","createddate","Analysis","loadUrlAnalytics","urlid","props","match","params","console","log","ourl","analysis","thedate","access_count","rows","r","accesseddate","Urlprocessor","rurl","rurlid","responseStatistics","Notfound","Boolean","hostname","routing","role","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,iKCqE5BC,E,uKAhEX,OACE,kBAAC,IAAMC,SAAP,KACE,gCACE,yBAAKC,UAAU,yDACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,WAGA,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,kBACZC,gBAAc,iBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,kBAC3C,wBAAIR,UAAU,kCACZ,wBAAIA,UAAU,mBAIZ,kBAAC,IAAD,CAAMS,GAAI,IAAKT,UAAU,YAAzB,SAIF,wBAAIA,UAAU,mBAIZ,kBAAC,IAAD,CAAMS,GAAI,QAAST,UAAU,YAA7B,kB,GAlCGU,aCgBNC,E,4MAhBbC,MAAQ,G,uDAEN,OACE,kBAAC,IAAMb,SAAP,KACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAhB,wE,GAPSU,a,+BCFRG,EAGP,2CCgISC,E,4MAhIbF,MAAQ,CACNG,IAAK,GACLC,SAAU,GACVC,YAAY,EACZC,OAAQ,EACRC,QAAS,GACTC,KAAM,M,EAqERC,iBAAmB,WACjB,IAAIC,EAAa,EAAKC,qBACpB,GACA,2DAEEC,EAAO,EAAKZ,MAAMO,QAAU,MAAQG,EACxC,EAAKG,SAAS,CAAET,SAAUQ,EAAMJ,KAAME,K,EAUxCI,iBAAmB,WACjB,EAAKD,SAAS,CACZP,OAAQ,IAEV,EAAKS,OAAO,EAAKf,Q,EAGnBe,O,uCAAS,WAAMC,GAAN,iBAAAC,EAAA,sEAECC,EAAS,CACbC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,IARlB,SAUkBS,MAAMxB,EAAS,OAAQiB,GAVzC,YAUCQ,EAVD,QAWQC,GAXR,iCAYgBD,EAASE,OAZzB,cAcH,EAAKf,SAAS,CACZP,OAAQ,IAfP,wBAkBH,EAAKO,SAAS,CACZP,OAAQ,IAnBP,0DAuBL,EAAKO,SAAS,CACZP,OAAQ,IAxBL,0D,wHAzFPuB,KAAKhB,SAAS,CAAEN,QAASuB,OAAOC,SAASC,OAAOC,e,+BAGxC,IAAD,OACP,OACE,kBAAC,IAAM9C,SAAP,KACE,wBAAIC,UAAU,QAAd,iBAQA,yBAAKA,UAAU,oBACb,2BACEE,KAAK,OACLF,UAAU,eACV8C,YAAY,8BACZvC,aAAW,8BACXwC,mBAAiB,eACjBC,KAAK,MACLC,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAaD,MAEnC,yBAAKlD,UAAU,sBACb,4BACEoD,QAASX,KAAKf,iBACd1B,UAAU,4BACVE,KAAK,SACLmD,SAAoC,IAA1BZ,KAAK7B,MAAMG,IAAIuC,QAJ3B,iBAWkB,GAArBb,KAAK7B,MAAMM,QACV,kBAAC,IAAMnB,SAAP,KACE,yBAAKC,UAAU,uBACb,4CADF,6BAGA,2BACEE,KAAK,OACLF,UAAU,eACVuD,UAAQ,EACRC,MAAOf,KAAK7B,MAAMI,YAIF,GAArByB,KAAK7B,MAAMM,QACV,kBAAC,IAAMnB,SAAP,KACE,yBAAKC,UAAU,uBACb,4CADF,iC,2CAQWyD,EAAKC,GAExB,IADA,IAAIC,EAAM,GACDC,EAAIH,EAAKG,EAAI,EAAGA,IACvBD,GAAOD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWL,EAAIJ,SAE5C,OAAOK,I,4EAWUT,G,iFACXT,KAAKhB,SAAL,eACHyB,EAAEc,OAAOhB,KAAOE,EAAEc,OAAOR,Q,uBAEtBf,KAAKpB,mB,4GAzFUX,aCeVuD,MAVf,WACE,OACE,kBAAC,IAAMlE,SAAP,KAEE,kBAAC,EAAD,QC8ESmE,E,4MApFbtD,MAAQ,CACNuD,KAAM,GACNhD,QAAS,GACTiD,QAAS,G,4KAIT3B,KAAK4B,W,gQAGL5B,KAAKhB,SAAS,CAAE0C,KAAM,KACtB1B,KAAKhB,SAAS,CAAE2C,QAAS,I,SAEF/B,MAAMxB,EAAS,Q,cAAhCyB,E,gBACaA,EAASE,O,OAAtBA,E,OACNC,KAAKhB,SAAS,CAAE0C,KAAM3B,IACtBC,KAAKhB,SAAS,CAAEN,QAASuB,OAAOC,SAASC,OAAOC,aAChDJ,KAAKhB,SAAS,CAAE2C,QAAS,I,sIAEjB,IAAD,OACP,OACE,kBAAC,IAAMrE,SAAP,KACE,yBAAKC,UAAU,cACb,wBAAIA,UAAU,QAAd,iBAEF,yBAAKA,UAAU,eACb,4BACEoD,QAAS,kBAAM,EAAKiB,YACpBnE,KAAK,SACLF,UAAU,qBACVqD,SAAiC,IAAvBZ,KAAK7B,MAAMwD,SAJvB,YASF,yBAAKpE,UAAU,oBACW,IAAvByC,KAAK7B,MAAMwD,SACV,kBAAC,IAAMrE,SAAP,KACE,yBAAKC,UAAU,oBACb,yCADF,wCAKJ,2BAAOA,UAAU,8BACf,+BACE,4BACE,mCACA,yCACA,4CACA,+BAGJ,+BACGyC,KAAK7B,MAAMuD,KAAKG,KAAI,SAAAvD,GAAG,OACtB,wBAAIwD,IAAKxD,EAAIP,IACX,4BAAKO,EAAIA,KACT,4BACE,kBAAC,IAAD,CACEN,GAAI,MAAQM,EAAIK,KAChBpB,UAAU,WACVgE,OAAO,UAEN,EAAKpD,MAAMO,QALd,MAK0BJ,EAAIK,OAGhC,4BAAKL,EAAIyD,aACT,4BACE,kBAAC,IAAD,CACE/D,GAAI,aAAeM,EAAIP,GACvBR,UAAU,0BAFZ,yB,GApEDU,aCsHJ+D,E,4MArHb7D,MAAQ,CACNG,IAAK,GACLqD,QAAS,G,4KAGT3B,KAAKiC,mB,0QAGLjC,KAAKhB,SAAS,CAAEV,IAAK,KACrB0B,KAAKhB,SAAS,CAAE2C,QAAS,IAErBO,EAAQ,KACmB,MAA3BlC,KAAKmC,MAAMC,MAAMC,SAAgBH,EAAQlC,KAAKmC,MAAMC,MAAMC,OAAOtE,I,SAE9C6B,MAAMxB,EAAS,gBAAkB8D,G,cAAlDrC,E,gBACaA,EAASE,O,OAAtBA,E,OACNC,KAAKhB,SAAS,CAAEV,IAAKyB,IACrBC,KAAKhB,SAAS,CAAEN,QAASuB,OAAOC,SAASC,OAAOC,aAChDJ,KAAKhB,SAAS,CAAE2C,QAAS,IACzBW,QAAQC,IAAIvC,KAAK7B,MAAMG,K,sIAEf,IAAD,OACP,OACE,kBAAC,IAAMhB,SAAP,KACE,yBAAKC,UAAU,cACb,wBAAIA,UAAU,QAAd,aAEF,yBAAKA,UAAU,eACb,4BACEoD,QAAS,kBAAM,EAAKsB,oBACpBxE,KAAK,SACLF,UAAU,qBACVqD,SAAiC,IAAvBZ,KAAK7B,MAAMwD,SAJvB,YASF,yBAAKpE,UAAU,oBACW,IAAvByC,KAAK7B,MAAMwD,SACV,kBAAC,IAAMrE,SAAP,KACE,yBAAKC,UAAU,oBACb,yCADF,wCAKHyC,KAAK7B,MAAMG,IAAIuD,KAAI,SAAAW,GAAI,OACtB,kBAAC,IAAMlF,SAAP,KACE,2BAAOC,UAAU,8BACf,+BACE,4BACE,mCACA,yCACA,4CAGJ,+BACE,wBAAIuE,IAAKU,EAAKzE,IACZ,4BAAKyE,EAAKlE,KACV,4BACE,kBAAC,IAAD,CACEN,GAAI,MAAQwE,EAAK7D,KACjBpB,UAAU,WACVgE,OAAO,UAEN,EAAKpD,MAAMO,QALd,MAK0B8D,EAAK7D,OAGjC,4BAAK6D,EAAKT,gBAIfS,EAAKC,SAASZ,KAAI,SAAAvD,GAAG,OACpB,kBAAC,IAAMhB,SAAP,KACE,6CACA,2BAAOC,UAAU,8BACf,+BACE,4BACE,oCACA,8CAGJ,+BACE,wBAAIuE,IAAKxD,EAAIoE,SACX,4BAAKpE,EAAIoE,SACT,4BAAKpE,EAAIqE,eAEX,4BACE,6BACA,4BACE,2BAAOpF,UAAU,8BACf,+BACE,4BACE,oCAGJ,+BACGe,EAAIsE,KAAKf,KAAI,SAAAgB,GAAC,OACb,wBAAIf,IAAKe,EAAE9E,IACT,4BAAK8E,EAAEC,sC,GAnGlB7E,aC0BR8E,E,4MA3Bb5E,MAAQ,G,qMAEF+D,EAAQ,KACmB,MAA3BlC,KAAKmC,MAAMC,MAAMC,SAAgBH,EAAQlC,KAAKmC,MAAMC,MAAMC,OAAO1D,M,SAE9CiB,MAAMxB,EAAS,OAAS8D,G,cAAzCrC,E,gBACaA,EAASE,O,cAAtBA,E,OAEFiD,EAAOjD,EAAK,GAAGzB,IACf2E,EAASlD,EAAK,GAAGhC,GACfsB,EAAS,CACbC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEuC,MAAOe,K,UAEDrD,MAAMxB,EAAS,gBAAiBiB,G,eAA3D6D,E,iBACuBA,EAAmBnD,O,eAC9CE,OAAOC,SAAS1C,KAAOwF,E,sIAGvB,OAAO,kBAAC,IAAM1F,SAAP,U,GAxBgBW,aCWZkF,E,4MAVbhF,MAAQ,G,uDAEN,OACE,kBAAC,IAAMb,SAAP,KACE,8C,GALeW,aCUHmF,QACW,cAA7BnD,OAAOC,SAASmD,UAEe,UAA7BpD,OAAOC,SAASmD,UAEhBpD,OAAOC,SAASmD,SAASjB,MACvB,2DCMN,IAAMkB,EACJ,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAMC,KAAK,OAAOhG,UAAU,aAC1B,yBAAKA,UAAU,OAAf,QACA,yBAAKA,UAAU,OAAf,QACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,IAAIC,UAAWlC,IACjC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,QAAQC,UAAWjC,IACrC,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,WAAWC,UAAWX,IACxC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,gBAAgBC,UAAW1B,IAC7C,kBAAC,IAAD,CAAO0B,UAAWP,MAGtB,kBAAC,EAAD,OAIJQ,IAASC,OAAON,EAASO,SAASC,eAAe,SDyF3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.5220404b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header>\r\n          <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              Shortit\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarCollapse\"\r\n              aria-controls=\"navbarCollapse\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n              <ul className=\"navbar-nav mr-auto float-right\">\r\n                <li className=\"nav-item active\">\r\n                  {/* <a className=\"nav-link\" href=\"/\">\r\n                    Home <span className=\"sr-only\">(current)</span>\r\n                  </a> */}\r\n                  <Link to={\"/\"} className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  {/* <a className=\"nav-link\" href=\"urls\">\r\n                    Urls\r\n                  </a> */}\r\n                  <Link to={\"/urls\"} className=\"nav-link\">\r\n                    Urls\r\n                  </Link>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <a className=\"nav-link disabled\" href=\"#\">\r\n                    Disabled\r\n                  </a>\r\n                </li> */}\r\n              </ul>\r\n              {/* <form className=\"form-inline mt-2 mt-md-0\">\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <button\r\n                  className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                  type=\"submit\"\r\n                >\r\n                  Search\r\n                </button>\r\n              </form> */}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"footer\">\r\n          <div className=\"container\">\r\n            <span className=\"text-muted\">\r\n              @ This is a test project for instacar by Vipin cheriyanveetil\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export const apiurl =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:3002/\"\r\n    : \"https://urlshortner007api.herokuapp.com/\";\r\n","import React, { Component } from \"react\";\r\nimport { apiurl } from \"../settings/sitesettings.js\";\r\nclass Shortenurl extends Component {\r\n  state = {\r\n    url: \"\",\r\n    shorturl: \"\",\r\n    processing: true,\r\n    status: 0,\r\n    baseurl: \"\",\r\n    ukey: null\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ baseurl: window.location.origin.toString() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"mt-5\">Enter you url</h1>\r\n        {/* <p className=\"lead\">\r\n            Pin a fixed-height footer to the bottom of the viewport in desktop\r\n            browsers with this custom HTML and CSS. A fixed navbar has been\r\n            added with <code>padding-top: 60px;</code> on the{\" \"}\r\n            <code>body &gt; .container</code>.\r\n          </p> */}\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter your lengthy url here\"\r\n            aria-label=\"Enter your lengthy url here\"\r\n            aria-describedby=\"basic-addon2\"\r\n            name=\"url\"\r\n            onChange={e => this.handleChange(e)}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              onClick={this.handleShortenurl}\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              disabled={this.state.url.length === 0}\r\n            >\r\n              Shorten It!\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.status == 2 && (\r\n          <React.Fragment>\r\n            <div className=\"alert alert-success\">\r\n              <strong>Success!</strong> Your short url is below.\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              readOnly\r\n              value={this.state.shorturl}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {this.state.status == 3 && (\r\n          <React.Fragment>\r\n            <div className=\"alert alert-warning\">\r\n              <strong>Failure!</strong> Oops ! An error occured.\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  generateRandomString(len, arr) {\r\n    var ans = \"\";\r\n    for (var i = len; i > 0; i--) {\r\n      ans += arr[Math.floor(Math.random() * arr.length)];\r\n    }\r\n    return ans;\r\n  }\r\n  generateShortUrl = () => {\r\n    let randstring = this.generateRandomString(\r\n      10,\r\n      \"1234567890abcdefghijklmnopqrsABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n    );\r\n    let surl = this.state.baseurl + \"/a/\" + randstring;\r\n    this.setState({ shorturl: surl, ukey: randstring });\r\n    //console.log(surl);\r\n  };\r\n  async handleChange(e) {\r\n    await this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    await this.generateShortUrl();\r\n    //console.log(this.state);\r\n  }\r\n  handleShortenurl = () => {\r\n    this.setState({\r\n      status: 1\r\n    });\r\n    this.addUrl(this.state);\r\n  };\r\n\r\n  addUrl = async data => {\r\n    try {\r\n      const config = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      };\r\n      const response = await fetch(apiurl + \"urls\", config);\r\n      if (response.ok) {\r\n        const ores = await response.json();\r\n        // console.log(ores);\r\n        this.setState({\r\n          status: 2\r\n        });\r\n      } else {\r\n        this.setState({\r\n          status: 3\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        status: 3\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport default Shortenurl;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Shortenurl from \"./components/shortenurl\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      {/* <Header /> */}\n      <Shortenurl />\n      {/* <Footer /> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiurl } from \"../settings/sitesettings.js\";\r\n\r\nclass Urls extends Component {\r\n  state = {\r\n    urls: [],\r\n    baseurl: \"\",\r\n    loading: 1\r\n  };\r\n  async componentDidMount() {\r\n    // console.log(apiurl);\r\n    this.loadUrls();\r\n  }\r\n  async loadUrls() {\r\n    this.setState({ urls: [] });\r\n    this.setState({ loading: 1 });\r\n\r\n    const response = await fetch(apiurl + \"urls\");\r\n    const json = await response.json();\r\n    this.setState({ urls: json });\r\n    this.setState({ baseurl: window.location.origin.toString() });\r\n    this.setState({ loading: 0 });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"float-left\">\r\n          <h1 className=\"mt-5\">List of urls</h1>\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button\r\n            onClick={() => this.loadUrls()}\r\n            type=\"button\"\r\n            className=\"btn btn-light mt-5\"\r\n            disabled={this.state.loading === 1}\r\n          >\r\n            Refresh\r\n          </button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          {this.state.loading === 1 && (\r\n            <React.Fragment>\r\n              <div className=\"alert alert-info\">\r\n                <strong>Info!</strong> We are loading the available info.\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          <table className=\"table table-hover table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Url</th>\r\n                <th>Short Url</th>\r\n                <th>Created Date</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.urls.map(url => (\r\n                <tr key={url.id}>\r\n                  <td>{url.url}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={\"/a/\" + url.ukey}\r\n                      className=\"nav-link\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {this.state.baseurl}/a/{url.ukey}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{url.createddate}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={\"/analysis/\" + url.id}\r\n                      className=\"btn btn-success btn-sm\"\r\n                    >\r\n                      Analysis\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Urls;\r\n","import React, { Component } from \"react\";\r\nimport { apiurl } from \"../settings/sitesettings.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Analysis extends Component {\r\n  state = {\r\n    url: [],\r\n    loading: 1\r\n  };\r\n  async componentDidMount() {\r\n    this.loadUrlAnalytics();\r\n  }\r\n  async loadUrlAnalytics() {\r\n    this.setState({ url: [] });\r\n    this.setState({ loading: 1 });\r\n\r\n    let urlid = null;\r\n    if (this.props.match.params != null) urlid = this.props.match.params.id;\r\n\r\n    const response = await fetch(apiurl + \"urlstatistic/\" + urlid);\r\n    const json = await response.json();\r\n    this.setState({ url: json });\r\n    this.setState({ baseurl: window.location.origin.toString() });\r\n    this.setState({ loading: 0 });\r\n    console.log(this.state.url);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"float-left\">\r\n          <h1 className=\"mt-5\">Analysis</h1>\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button\r\n            onClick={() => this.loadUrlAnalytics()}\r\n            type=\"button\"\r\n            className=\"btn btn-light mt-5\"\r\n            disabled={this.state.loading === 1}\r\n          >\r\n            Refresh\r\n          </button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          {this.state.loading === 1 && (\r\n            <React.Fragment>\r\n              <div className=\"alert alert-info\">\r\n                <strong>Info!</strong> We are loading the available info.\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {this.state.url.map(ourl => (\r\n            <React.Fragment>\r\n              <table className=\"table table-hover table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>url</th>\r\n                    <th>Short url</th>\r\n                    <th>Created On</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr key={ourl.id}>\r\n                    <td>{ourl.url}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={\"/a/\" + ourl.ukey}\r\n                        className=\"nav-link\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        {this.state.baseurl}/a/{ourl.ukey}\r\n                      </Link>\r\n                    </td>\r\n                    <td>{ourl.createddate}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              {ourl.analysis.map(url => (\r\n                <React.Fragment>\r\n                  <h4>visit details</h4>\r\n                  <table className=\"table table-hover table-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Date</th>\r\n                        <th>No of visits</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr key={url.thedate}>\r\n                        <td>{url.thedate}</td>\r\n                        <td>{url.access_count}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td>\r\n                          <table className=\"table table-hover table-sm\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>at</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {url.rows.map(r => (\r\n                                <tr key={r.id}>\r\n                                  <td>{r.accesseddate}</td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </React.Fragment>\r\n              ))}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analysis;\r\n","import React, { Component } from \"react\";\r\nimport { apiurl } from \"../settings/sitesettings.js\";\r\nclass Urlprocessor extends Component {\r\n  state = {};\r\n  async componentDidMount() {\r\n    let urlid = null;\r\n    if (this.props.match.params != null) urlid = this.props.match.params.ukey;\r\n\r\n    const response = await fetch(apiurl + \"url/\" + urlid);\r\n    const json = await response.json();\r\n    //console.log(json);\r\n    let rurl = json[0].url;\r\n    let rurlid = json[0].id;\r\n    const config = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ urlid: rurlid })\r\n    };\r\n    let responseStatistics = await fetch(apiurl + \"urlstatistics\", config);\r\n    let jsonstatistics = await responseStatistics.json();\r\n    window.location.href = rurl;\r\n  }\r\n  render() {\r\n    return <React.Fragment></React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Urlprocessor;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Notfound extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Not found</h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notfound;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Urls from \"./pages/urls\";\nimport Analysis from \"./pages/analysys\";\nimport Urlprocessor from \"./pages/urlprocessor\";\nimport Notfound from \"./pages/notfound\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\n// import \"bootstrap/dist/js/bootstrap.js\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nconst routing = (\n  <Router>\n    <Header />\n    <main role=\"main\" className=\"container\">\n      <div className=\"row\">&nbsp;</div>\n      <div className=\"row\">&nbsp;</div>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/urls\" component={Urls} />\n        <Route exact path=\"/a/:ukey\" component={Urlprocessor} />\n        <Route exact path=\"/analysis/:id\" component={Analysis} />\n        <Route component={Notfound} />\n      </Switch>\n    </main>\n    <Footer />\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}